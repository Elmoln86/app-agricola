import streamlit as st
import ee
import json
import os
from data_collector.weather_collector import DataCollector
from data_collector.satellite_collector import SatelliteCollector
from data_collector.financial_collector import FinancialCollector
from ia_engine.training import Trainer
from ia_engine.predict import Predictor
from ia_engine.llm_chatbot import Chatbot
from automation.irrigation_controller import IrrigationController
from digital_twin.visualization import DigitalTwin

# --- Configura√ß√µes da P√°gina Streamlit ---
st.set_page_config(layout="wide", page_title="App Agr√≠cola Inteligente")
st.title("Plataforma de Gest√£o Agr√≠cola Inteligente")
st.markdown("Bem-vindo √† sua plataforma integrada de an√°lise e automa√ß√£o agr√≠cola.")

def authenticate_google_earth_engine():
    """
    Autentica a aplica√ß√£o com o Google Earth Engine.
    L√™ o caminho do arquivo de chave privada dos segredos do Streamlit,
    carrega as credenciais e inicializa a API do Earth Engine.
    """
    try:
        st.header("Status da Autentica√ß√£o do Google Earth Engine")
        
        # Acessa o caminho do arquivo de segredos
        key_file_path = st.secrets["gee_credentials"]["private_key_path"]
        
        # O Streamlit j√° carrega o arquivo no ambiente de deploy
        # mas para testes locais, verifique a exist√™ncia
        if not os.path.exists(key_file_path):
            st.error(f"‚ùå Erro: O arquivo de chave privada '{key_file_path}' n√£o foi encontrado.")
            st.info("Por favor, certifique-se de que o arquivo est√° no diret√≥rio correto e que o nome no 'secrets.toml' est√° correto.")
            return False

        with open(key_file_path, 'r') as f:
            credentials_json = json.load(f)

        ee.Authenticate(credentials=ee.ServiceAccountCredentials(
            credentials_json['client_email'],
            credentials_json['private_key']
        ))
        
        ee.Initialize()
        
        st.success("ÔøΩ A autentica√ß√£o com o Google Earth Engine foi bem-sucedida! üéâ")
        st.write("Isso significa que as suas credenciais foram lidas corretamente e a conex√£o foi estabelecida.")
        
        # Exemplo de teste simples para confirmar a conex√£o
        st.header("Teste de Conex√£o com a API")
        try:
            location = ee.Geometry.Point([-47.9382, -15.7801])
            st.write("Conex√£o com o Earth Engine estabelecida com sucesso!")
            st.write(f"Geometria de teste: {location.getInfo()}")
        except ee.EEException as e:
            st.error(f"Erro ao executar o teste da API. O problema ainda pode ser nas permiss√µes da sua conta. Erro: {e}")
        return True

    except KeyError:
        st.error("‚ùå Erro: A chave 'private_key_path' n√£o foi encontrada nos seus segredos do Streamlit. Por favor, verifique se a sua configura√ß√£o de secrets est√° correta.")
        return False
    except Exception as e:
        st.error(f"‚ùå Erro ao inicializar o Google Earth Engine. ‚ùå")
        st.write("Ocorreu um problema com a autentica√ß√£o. Por favor, verifique os seguintes pontos:")
        st.markdown("- As suas credenciais no arquivo `ee-service-account.json` est√£o formatadas corretamente.")
        st.markdown("- A sua conta de servi√ßo tem as permiss√µes necess√°rias no seu projeto do Google Cloud e no Google Earth Engine.")
        st.markdown(f"**Detalhes do erro:** {e}")
        return False

# Executa a autentica√ß√£o no in√≠cio da aplica√ß√£o
if authenticate_google_earth_engine():
    # --- Inst√¢ncias dos M√≥dulos com Argumentos ---
    start_date_exemplo = '2024-01-01'
    end_date_exemplo = '2024-01-31'
    location_exemplo = ee.Geometry.Point([-47.9382, -15.7801])

    # Instanciando as classes com os argumentos corretos
    weather_collector = DataCollector(start_date=start_date_exemplo, end_date=end_date_exemplo, location=location_exemplo)
    satellite_collector = SatelliteCollector(start_date=start_date_exemplo, end_date=end_date_exemplo, location=location_exemplo)
    financial_collector = FinancialCollector()
    trainer = Trainer()
    predictor = Predictor(model=None)
    chatbot = Chatbot()
    irrigation_controller = IrrigationController()
    digital_twin = DigitalTwin()

    # --- L√≥gica da Aplica√ß√£o ---

    # Exemplo de como usar o DataCollector
    st.header("Dados Meteorol√≥gicos")
    if st.button("Coletar Dados Meteorol√≥gicos"):
        with st.spinner('Coletando dados...'):
            dados_tempo = weather_collector.get_weather_data()
            if dados_tempo is not None:
                st.success("Dados de tempo coletados com sucesso!")
                st.dataframe(dados_tempo.head())
            else:
                st.error("N√£o foi poss√≠vel coletar os dados de tempo.")

    # Exemplo de como usar o SatelliteCollector
    st.header("An√°lise de Sat√©lite (NDVI)")
    if st.button("Coletar Dados de Sat√©lite"):
        with st.spinner('Coletando dados...'):
            dados_satelite = satellite_collector.get_ndvi_data()
            if dados_satelite is not None:
                st.success("Dados de sat√©lite coletados com sucesso!")
                st.write(dados_satelite)
            else:
                st.error("N√£o foi poss√≠vel coletar os dados de sat√©lite.")
